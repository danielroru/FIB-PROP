/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interficie;
import Dominio.ControladoraDominio;
import java.awt.event.KeyEvent;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos
 */
public class AdminCriterios extends javax.swing.JFrame {
    
    private ControladoraInterficie CD = new ControladoraInterficie();

    /**
     * Creates new form AdminCriterios
     */
    public AdminCriterios(){
        initComponents();
    }
    
    private boolean stringIsNumber(String str)
    {
        for (char c : str.toCharArray())
        {
            if (!Character.isDigit(c)) return false;
        }
        return true;
    }
    
    public void cerrar() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,
                "¿Desea salir de la aplicación? Todos los cambios no guardados se perderán.",
                "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,
                null,opciones,"Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) dispose();
    }
    
    /**
     * Creates new form AdminCriterios
     * @param cd
     */
    public AdminCriterios(ControladoraInterficie cd) {
        CD = cd;
        
        initComponents();
        
        //Cargamos los datos existentes
        ArrayList<ArrayList<String>> crit = CD.getCriterios();
        if(!crit.isEmpty()){
            DefaultTableModel model = (DefaultTableModel) tableCriterios.getModel();
            for(ArrayList<String> caux : crit){
                String s = caux.get(0);
                if(s.equals("Anyo")) s = "Año";
                model.addRow(new Object[]{s, caux.get(1)});
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCriterios = new javax.swing.JTable();
        labelTitle = new javax.swing.JLabel();
        labelCriterio = new javax.swing.JLabel();
        labelPeso = new javax.swing.JLabel();
        textFieldPeso = new javax.swing.JTextField();
        buttonAnadir = new javax.swing.JButton();
        buttonVolver = new javax.swing.JButton();
        comboBoxCriterios = new javax.swing.JComboBox();
        buttonEliminar = new javax.swing.JButton();
        textFieldInfo = new javax.swing.JTextField();
        labelInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("YOUTUBE Mix: Administrar Criterios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tableCriterios.setAutoCreateRowSorter(true);
        tableCriterios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Criterio", "Peso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCriterios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableCriterios);
        if (tableCriterios.getColumnModel().getColumnCount() > 0) {
            tableCriterios.getColumnModel().getColumn(0).setResizable(false);
            tableCriterios.getColumnModel().getColumn(1).setResizable(false);
        }

        labelTitle.setFont(new java.awt.Font("Lao UI", 0, 24)); // NOI18N
        labelTitle.setText("Administar Criterios");

        labelCriterio.setText("Criterio");

        labelPeso.setText("Peso [1..100]");

        textFieldPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPesoActionPerformed(evt);
            }
        });
        textFieldPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldPesoKeyTyped(evt);
            }
        });

        buttonAnadir.setText("Añadir");
        buttonAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnadirActionPerformed(evt);
            }
        });

        buttonVolver.setText("Volver");
        buttonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVolverActionPerformed(evt);
            }
        });

        comboBoxCriterios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Titulo", "Autor", "Album", "Año", "Estilo", "Escuchas", "Usuario" }));
        comboBoxCriterios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCriteriosActionPerformed(evt);
            }
        });

        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        textFieldInfo.setEditable(false);
        textFieldInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldInfoActionPerformed(evt);
            }
        });

        labelInfo.setText("System Info:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(labelTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(labelCriterio)
                        .addGap(71, 71, 71)
                        .addComponent(labelPeso)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(comboBoxCriterios, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(textFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(labelInfo))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(buttonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                        .addComponent(buttonAnadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(textFieldInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonVolver)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCriterio)
                            .addComponent(labelPeso))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonAnadir)
                            .addComponent(comboBoxCriterios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar))
                    .addComponent(labelInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textFieldInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(buttonVolver)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPesoActionPerformed

    private void buttonAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnadirActionPerformed
        // TODO add your handling code here:
        String crit = comboBoxCriterios.getSelectedItem().toString();
        String val = textFieldPeso.getText();
        DefaultTableModel model = (DefaultTableModel) tableCriterios.getModel();
        if(!val.equals("") && stringIsNumber(val) && Integer.parseInt(val) <= 100 && Integer.parseInt(val) >= 1){
            boolean exists = false;
            String oldVal = null;
            int i = 0;
            for (; i < tableCriterios.getRowCount(); i++) {    
                String s = tableCriterios.getValueAt(i, 0).toString().trim();
                if(crit.equals(s))
                {
                    oldVal = tableCriterios.getValueAt(i, 1).toString().trim();
                    exists = true;
                    break;
                }
            }
            if(exists){
                if(val.equals("0")){
                    model.removeRow(i);
                    if(crit.equals("Año")) crit = "Anyo";
                    CD.delCri(crit, oldVal);
                    textFieldInfo.setText("Criterio Eliminado");
                }
                else{
                    model.setValueAt(val, i, 1);
                    if(crit.equals("Año")) crit = "Anyo";
                    CD.delCri(crit, oldVal);
                    CD.addCri(crit, val);
                    textFieldInfo.setText("Criterio Modificado");
                }
            }
            else {
                if(Integer.parseInt(val) < 1) textFieldInfo.setText("Peso no valido");
                else{
                    model.addRow(new Object[]{crit, val});
                    if(crit.equals("Año")) crit = "Anyo";
                    CD.addCri(crit, val);
                    textFieldInfo.setText("Criterio Añadido");
                }
            }
        }
        else {
            if(val.equals(""))textFieldInfo.setText("Introduce el Peso");
            else textFieldInfo.setText("Peso no valido");
        }
    }//GEN-LAST:event_buttonAnadirActionPerformed

    private void buttonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVolverActionPerformed
        // TODO add your handling code here:
        MenuPrincipal obj = new MenuPrincipal(CD);
        obj.setLocationRelativeTo(null);
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_buttonVolverActionPerformed

    private void comboBoxCriteriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCriteriosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCriteriosActionPerformed

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableCriterios.getModel();
        int row = tableCriterios.getSelectedRow();
        if(row != -1){
            String crit = tableCriterios.getValueAt(row, 0).toString().trim();
            String val = tableCriterios.getValueAt(row, 1).toString().trim();
            if(crit.equals("Año")) crit = "Anyo";
            CD.delCri(crit,val);
            model.removeRow(row);
            textFieldInfo.setText("Criterio Eliminado");
        }
        else {
            textFieldInfo.setText("Selecciona el Criterio a Eliminar");
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void textFieldPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldPesoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_textFieldPesoKeyTyped

    private void textFieldInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldInfoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrar();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminCriterios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminCriterios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminCriterios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminCriterios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminCriterios(new ControladoraInterficie()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAnadir;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonVolver;
    private javax.swing.JComboBox comboBoxCriterios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCriterio;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JLabel labelPeso;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTable tableCriterios;
    private javax.swing.JTextField textFieldInfo;
    private javax.swing.JTextField textFieldPeso;
    // End of variables declaration//GEN-END:variables
}
