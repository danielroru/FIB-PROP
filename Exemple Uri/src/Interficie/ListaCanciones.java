/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interficie;

import Dominio.ControladoraDominio;
import Dominio.Cjto_Canciones;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author alexcuello
 */
public class ListaCanciones extends javax.swing.JFrame {
    JFileChooser seleccionado = new JFileChooser();
    File archivo;
    
    private ControladoraInterficie CD = new ControladoraInterficie();
    /**
     * Creates new form ListaCanciones
     */
    
    private void cargar(){
        DefaultTableModel model = (DefaultTableModel)TableSongs.getModel();
        model.setRowCount(0);
        ArrayList<Object> obj = new ArrayList<>();
        obj = CD.CargarCanTab2();
        for(int i = 0; i < obj.size(); ++i){
            Object res[] = (Object[]) obj.get(i);
            model.addRow(res);
        }
        
    }
    
    
    public ListaCanciones(ControladoraInterficie cd) {
        CD = cd;
        
        initComponents();
        cargar();
        
        //CD = new ControladoraDominio();
    }
    
    
    public void cerrar() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,
                "¿Desea salir de la aplicación? Todos los cambios no guardados se perderán.",
                "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,
                null,opciones,"Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AdministrarCanciontesTxt = new javax.swing.JLabel();
        AnyoA = new javax.swing.JTextField();
        Volver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSongs = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AñadirCancion = new javax.swing.JButton();
        EstilosA = new javax.swing.JTextField();
        TituloA = new javax.swing.JTextField();
        AlbumA = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        AutorA = new javax.swing.JTextField();
        ComboEstilos = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        EliminarCancion = new javax.swing.JButton();
        ErrorTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ModCancionB = new javax.swing.JButton();
        EliminarTodas = new javax.swing.JButton();
        CargarB = new javax.swing.JButton();
        GuardarB = new javax.swing.JButton();
        AnyadirE = new javax.swing.JButton();
        lc = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        lcTxt = new javax.swing.JTextField();
        Mostrar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("YOUTUBE Mix: Administrar Canciones");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Título");

        jLabel2.setText("Autor ");

        AdministrarCanciontesTxt.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        AdministrarCanciontesTxt.setText("Administrar Canciones");

        AnyoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnyoAActionPerformed(evt);
            }
        });
        AnyoA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AnyoAKeyTyped(evt);
            }
        });

        Volver.setText("Volver");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });

        TableSongs.setAutoCreateRowSorter(true);
        TableSongs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Autor", "Album", "Año", "Estilos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSongs.getTableHeader().setReorderingAllowed(false);
        TableSongs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSongsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableSongs);
        if (TableSongs.getColumnModel().getColumnCount() > 0) {
            TableSongs.getColumnModel().getColumn(0).setResizable(false);
            TableSongs.getColumnModel().getColumn(1).setResizable(false);
            TableSongs.getColumnModel().getColumn(2).setResizable(false);
            TableSongs.getColumnModel().getColumn(3).setResizable(false);
            TableSongs.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel3.setText("Album  ");

        jLabel4.setText("Año ");

        AñadirCancion.setText("Añadir Canción");
        AñadirCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirCancionActionPerformed(evt);
            }
        });

        EstilosA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstilosAActionPerformed(evt);
            }
        });

        TituloA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TituloAActionPerformed(evt);
            }
        });

        AlbumA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlbumAActionPerformed(evt);
            }
        });

        jLabel6.setText("Estilos separados por comas");

        AutorA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorAActionPerformed(evt);
            }
        });

        ComboEstilos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Electronica", "Pop", "Rock", "Jazz", "Dubstep", "Punk", "80", "90", "Reggeaton", "Clasica" }));
        ComboEstilos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboEstilosActionPerformed(evt);
            }
        });

        jLabel5.setText("Sugerencia de Estilos:");

        EliminarCancion.setText("Eliminar Canción");
        EliminarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarCancionActionPerformed(evt);
            }
        });

        ErrorTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ErrorTxtActionPerformed(evt);
            }
        });

        jLabel8.setText("Sistema:");

        ModCancionB.setText("Modificar Canción");
        ModCancionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModCancionBActionPerformed(evt);
            }
        });

        EliminarTodas.setText("Eliminar Todas");
        EliminarTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarTodasActionPerformed(evt);
            }
        });

        CargarB.setText("Cargar");
        CargarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarBActionPerformed(evt);
            }
        });

        GuardarB.setText("Guardar");
        GuardarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarBActionPerformed(evt);
            }
        });

        AnyadirE.setText("Añadir Estilo");
        AnyadirE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnyadirEActionPerformed(evt);
            }
        });

        lc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas", "Titulo", "Autor", "Album", "Año" }));

        jLabel7.setText("Mostrar Canciones por:");

        Mostrar.setText("Mostrar");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        jLabel9.setText("Titulo|Autor|Album|Año");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ErrorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Volver)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1)
                        .addGap(118, 118, 118)
                        .addComponent(jLabel2)
                        .addGap(110, 110, 110)
                        .addComponent(jLabel3)
                        .addGap(118, 118, 118)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(AñadirCancion)
                        .addGap(18, 18, 18)
                        .addComponent(ModCancionB)
                        .addGap(18, 18, 18)
                        .addComponent(EliminarCancion)
                        .addGap(18, 18, 18)
                        .addComponent(EliminarTodas)
                        .addGap(42, 42, 42)
                        .addComponent(CargarB, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(GuardarB, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TituloA, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AutorA, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(EstilosA, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AlbumA, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AnyoA, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ComboEstilos, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(AnyadirE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel6)
                                .addGap(114, 114, 114)
                                .addComponent(jLabel5)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lc, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(145, 145, 145))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AdministrarCanciontesTxt)
                .addGap(407, 407, 407))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 941, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AdministrarCanciontesTxt)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TituloA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AutorA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AlbumA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AnyoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EstilosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboEstilos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AnyadirE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EliminarCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AñadirCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ModCancionB, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EliminarTodas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CargarB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GuardarB, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ErrorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Volver)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnyoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnyoAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnyoAActionPerformed

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        MenuPrincipal obj = new MenuPrincipal(CD);
        obj.setLocationRelativeTo(null);
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_VolverActionPerformed

    private void EstilosAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstilosAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EstilosAActionPerformed

    private void TituloAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TituloAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TituloAActionPerformed

    private void AlbumAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlbumAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AlbumAActionPerformed

    private void AutorAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AutorAActionPerformed

    private void AñadirCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirCancionActionPerformed
            // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)TableSongs.getModel();
        String Titulo = TituloA.getText();
        String Autor = AutorA.getText();
        
        if (!TituloA.getText().trim().equals("") && !AutorA.getText().trim().equals("") 
            && !AlbumA.getText().trim().equals("") && !AnyoA.getText().trim().equals("") && !EstilosA.getText().trim().equals("")){
            
            if(CD.JaEstaTaula(Titulo,Autor, model)) ErrorTxt.setText("Ya existe una cancion con el mismo Titulo y Autor ");
            else if(2015 < Integer.parseInt(AnyoA.getText())) ErrorTxt.setText("Año tiene que ser inferior o igual a 2015");
            else {
                String Album = AlbumA.getText();
                String Anyo = AnyoA.getText();
                String Estilos = EstilosA.getText();
                Object o[] = {Titulo, Autor, Album, Anyo, Estilos};
                model.addRow(o); 
                String dataLine[] = EstilosA.getText().split(",");
                Set<String> es = new HashSet<>();
                for(int i = 0; i < dataLine.length; ++i){
                    es.add(dataLine[i].replaceAll("\\s", ""));
                }
                CD.addCancion(Titulo, Autor, Album, Integer.parseInt(Anyo), es);
                ErrorTxt.setText("Anyadida");
                //TableSongs.setAutoCreateRowSorter(true);
            }
            
        }
        else {
            ErrorTxt.setText("Tienes que anyadir todos los campos {Titulo, Autor, Album, Año, Estilos}");
        }
        
    }//GEN-LAST:event_AñadirCancionActionPerformed

    private void EliminarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarCancionActionPerformed
        DefaultTableModel model = (DefaultTableModel)TableSongs.getModel();
            
        if(TableSongs.getSelectedRow() == -1){
            if(TableSongs.getRowCount() == 0) ErrorTxt.setText("La tabla está vacía");
            else ErrorTxt.setText("Debes seleccionar una Canción");
        }
        else {
            
            String Tit = model.getValueAt(TableSongs.getSelectedRow(), 0).toString();
            String Aut = model.getValueAt(TableSongs.getSelectedRow(), 1).toString();
            CD.delCancionEscuchas(Tit,Aut);
            CD.delCancion(Tit, Aut);
            
            model.removeRow(TableSongs.getSelectedRow());
            ErrorTxt.setText("Eliminada correctamente");
            
        }
    }//GEN-LAST:event_EliminarCancionActionPerformed

    private void ErrorTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ErrorTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ErrorTxtActionPerformed

    private void ModCancionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModCancionBActionPerformed
            DefaultTableModel model = (DefaultTableModel)TableSongs.getModel();
            
            if(TableSongs.getSelectedRow() == -1){
                if(TableSongs.getRowCount() == 0) ErrorTxt.setText("La tabla está vacía");
                else ErrorTxt.setText("Debes seleccionar una Canción");
            }
            else {
                int row = TableSongs.getSelectedRow();
                String Tit = TableSongs.getValueAt(row, 0).toString();
                String Aut = TableSongs.getValueAt(row, 1).toString();
                if(Tit.equals(TituloA.getText()) && Aut.equals(AutorA.getText())){
                   model.setValueAt(TituloA.getText(), TableSongs.getSelectedRow(), 0);
                   model.setValueAt(AutorA.getText(), TableSongs.getSelectedRow(), 1);
                   model.setValueAt(AlbumA.getText(), TableSongs.getSelectedRow(), 2);
                   model.setValueAt(AnyoA.getText(), TableSongs.getSelectedRow(), 3);
                   model.setValueAt(EstilosA.getText(), TableSongs.getSelectedRow(), 4); 
                   String dataLine[] = EstilosA.getText().split(",");
                   Set<String> es = new HashSet<>();
                   for(int i = 0; i < dataLine.length; ++i){
                       es.add(dataLine[i].replaceAll("\\s", ""));
                   }
                   CD.modCancion2(Tit, Aut, TituloA.getText(), AutorA.getText(),
                                  AlbumA.getText(), Integer.parseInt(AnyoA.getText()), es);
                   
                   ErrorTxt.setText("Modificada correctamente");
                }
                else if(CD.JaEstaTaula(TituloA.getText(),AutorA.getText() , model)){
                    ErrorTxt.setText("Ya existe una cancion con el mismo Titlo y Autor ");
                }
                else{
                   model.setValueAt(TituloA.getText(), TableSongs.getSelectedRow(), 0);
                   model.setValueAt(AutorA.getText(), TableSongs.getSelectedRow(), 1);
                   model.setValueAt(AlbumA.getText(), TableSongs.getSelectedRow(), 2);
                   model.setValueAt(AnyoA.getText(), TableSongs.getSelectedRow(), 3);
                   model.setValueAt(EstilosA.getText(), TableSongs.getSelectedRow(), 4); 
                   String dataLine[] = EstilosA.getText().split(",");
                   Set<String> es = new HashSet<>();
                   for(int i = 0; i < dataLine.length; ++i){
                       es.add(dataLine[i].replaceAll("\\s", ""));
                   }
                   CD.modCancion2(Tit, Aut, TituloA.getText(), AutorA.getText(),
                                  AlbumA.getText(), Integer.parseInt(AnyoA.getText()), es);
                   
                   ErrorTxt.setText("Modificada correctamente"); 
                }
                
            }
    }//GEN-LAST:event_ModCancionBActionPerformed

    private void TableSongsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSongsMouseClicked
        DefaultTableModel model = (DefaultTableModel)TableSongs.getModel();
        TituloA.setText(model.getValueAt(TableSongs.getSelectedRow(), 0).toString());
        AutorA.setText(model.getValueAt(TableSongs.getSelectedRow(), 1).toString());
        AlbumA.setText(model.getValueAt(TableSongs.getSelectedRow(), 2).toString());
        AnyoA.setText(model.getValueAt(TableSongs.getSelectedRow(), 3).toString());
        EstilosA.setText(model.getValueAt(TableSongs.getSelectedRow(), 4).toString());
        
    }//GEN-LAST:event_TableSongsMouseClicked

    private void EliminarTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarTodasActionPerformed
        DefaultTableModel model = (DefaultTableModel) TableSongs.getModel();
        model.setRowCount(0);
        CD.delAllCanciones();
        CD.delCancionEscuchas();
        ErrorTxt.setText("Eliminadas todas las canciones");
    }//GEN-LAST:event_EliminarTodasActionPerformed

    private void CargarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarBActionPerformed
        DefaultTableModel model = (DefaultTableModel) TableSongs.getModel();
        JFileChooser chooser = new JFileChooser();
        boolean b = false;
        int r = chooser.showOpenDialog(null);
        if(r==JFileChooser.APPROVE_OPTION){
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            ArrayList<Object> tab = new ArrayList<>();
            ErrorTxt.setText(filename);
            tab = CD.CargarCanTab(model, filename, b);
            cargar();
            TableSongs.setAutoCreateRowSorter(true);
            //TableSongs.setCol
            
            if(b) ErrorTxt.setText("Hay canciones que no se han cargado porque ya existía una Cancion con ese Titulo y Autor");
        }
        
       
    }//GEN-LAST:event_CargarBActionPerformed

    private void GuardarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarBActionPerformed
        
        if (seleccionado.showDialog(this,"Guardar archivo") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionado.getSelectedFile();
            String path = archivo.getAbsolutePath();
            
            if(archivo.getName().endsWith("txt")) {  //COMPROBAMOS QUE SEA EXTENSION .TXT
                
                if (!archivo.exists()) {    // SI EL FICHERO NO EXISTE LO CREAMOS
                    File fichero = new File(path);
                    try {
                        fichero.createNewFile();
                    } catch (IOException ex) {
                        Logger.getLogger(Menu_AdminAlgo.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                if (archivo.canRead()) {    // SI NO PUEDE LEERSE ALGO PASA, ABORTAMOS  
                    CD.GuardarCanTab(path);
                    JOptionPane.showMessageDialog(null, "Fichero guardado en \""+ path +"\"");
                }
                else JOptionPane.showMessageDialog(null, "El archivo NO ha podido leerse.");
            }
            else JOptionPane.showMessageDialog(null, "El archivo seleccionado no es un \".txt\" valido.");
        }
    }//GEN-LAST:event_GuardarBActionPerformed

    private void AnyadirEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnyadirEActionPerformed
        String Est = ComboEstilos.getSelectedItem().toString();
        if(EstilosA.getText().isEmpty()) EstilosA.setText(Est);
        else{
            String est = EstilosA.getText();
            EstilosA.setText(est+", "+Est);
        }
    }//GEN-LAST:event_AnyadirEActionPerformed

    private void ComboEstilosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboEstilosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboEstilosActionPerformed

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        DefaultTableModel model = (DefaultTableModel)TableSongs.getModel();
        if(!lc.getSelectedItem().toString().equals("Todas") && lcTxt.getText().isEmpty()){
            ErrorTxt.setText("Has de añadir el Título, Autor, Album o Año de lo que quieras buscar");
        }
        else{
            ArrayList<Object> obj = CD.cargarCancionBuscador2(lc.getSelectedItem().toString(),lcTxt.getText());
            model.setRowCount(0);
            for(int i = 0; i < obj.size(); ++i){
                Object res[] = (Object[]) obj.get(i);
                model.addRow(res);
            }
        } 
    }//GEN-LAST:event_MostrarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrar();
    }//GEN-LAST:event_formWindowClosing

    private void AnyoAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AnyoAKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
            getToolkit().beep();
            evt.consume();
        }// TODO add your handling code here:
    }//GEN-LAST:event_AnyoAKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaCanciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaCanciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaCanciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaCanciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaCanciones(new ControladoraInterficie()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdministrarCanciontesTxt;
    private javax.swing.JTextField AlbumA;
    private javax.swing.JButton AnyadirE;
    private javax.swing.JTextField AnyoA;
    private javax.swing.JTextField AutorA;
    private javax.swing.JButton AñadirCancion;
    private javax.swing.JButton CargarB;
    private javax.swing.JComboBox ComboEstilos;
    private javax.swing.JButton EliminarCancion;
    private javax.swing.JButton EliminarTodas;
    private javax.swing.JTextField ErrorTxt;
    private javax.swing.JTextField EstilosA;
    private javax.swing.JButton GuardarB;
    private javax.swing.JButton ModCancionB;
    private javax.swing.JButton Mostrar;
    private javax.swing.JTable TableSongs;
    private javax.swing.JTextField TituloA;
    private javax.swing.JButton Volver;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox lc;
    private javax.swing.JTextField lcTxt;
    // End of variables declaration//GEN-END:variables
}
