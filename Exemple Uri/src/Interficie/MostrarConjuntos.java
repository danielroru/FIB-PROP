/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interficie;

import Dominio.ControladoraDominio;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marc.mauri.ruiz
 */
public class MostrarConjuntos extends javax.swing.JFrame {

    private ControladoraInterficie CD = new ControladoraInterficie();
    private int nConjuntos = 0;
    /**
     * Creates new form MostrarConjuntos
     */
    public MostrarConjuntos() {
        initComponents();
    }
    
    public MostrarConjuntos(ControladoraInterficie cd) {
        initComponents();
        CD = cd;
        
        DefaultTableModel model = (DefaultTableModel) tablaConjuntos.getModel();
        model.setRowCount(0);   //Eliminar filas existentes antes de cargar nuevas
        ArrayList<Object> tab = new ArrayList<>();
        tab = CD.ConvertirConjTab();
        nConjuntos = ((int) tab.get(0));
        errText.setText("Conjuntos: "+Integer.toString(nConjuntos));
        for (int i = 1; i < tab.size(); ++i){
            model.addRow((Object[]) tab.get(i));    //Vamos anadiendo filas
        }
        //tablaConjuntos.removeColumn(tablaConjuntos.getColumnModel().getColumn(1));  //Borramos la columna con los IDcan
        //JOptionPane.showMessageDialog(null, "El conjunto de comunidades se ha cargado con exito.");

        //Actualizar desplegable numConj
        String[] maxConj = new String[nConjuntos];
        for (int i = 0; i < nConjuntos; i++) maxConj[i] = Integer.toString(i);
        numConj.setModel(new javax.swing.DefaultComboBoxModel(maxConj));
        numConj_copia.setModel(new javax.swing.DefaultComboBoxModel(maxConj));
        
        tablaConjuntos.setAutoCreateRowSorter(Boolean.TRUE);
    }

    public void cerrar() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,
                "¿Desea salir de la aplicación? Todos los cambios no guardados se perderán.",
                "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,
                null,opciones,"Aceptar");
        if (eleccion == JOptionPane.YES_OPTION) dispose();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        contenedorConjuntos = new javax.swing.JScrollPane();
        tablaConjuntos = new javax.swing.JTable();
        volver = new javax.swing.JButton();
        menu = new javax.swing.JButton();
        descripcion1 = new javax.swing.JLabel();
        descripcion2 = new javax.swing.JLabel();
        delCancion = new javax.swing.JButton();
        descripcionCambio = new javax.swing.JLabel();
        numConj = new javax.swing.JComboBox();
        ok_mover = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        errText = new javax.swing.JTextField();
        ok_copia = new javax.swing.JButton();
        numConj_copia = new javax.swing.JComboBox();
        descripcionCopia = new javax.swing.JLabel();
        lb_errText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("YOUTUBE Mix: Mostrar conjuntos");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Mostrar conjuntos");

        tablaConjuntos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "# Conjunto", "Titulo", "Autor", "Álbum", "Año", "Estilos"
            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    tablaConjuntos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    tablaConjuntos.addInputMethodListener(new java.awt.event.InputMethodListener() {
        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            tablaConjuntosInputMethodTextChanged(evt);
        }
        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
        }
    });
    contenedorConjuntos.setViewportView(tablaConjuntos);

    volver.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    volver.setText("Volver");
    volver.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            volverActionPerformed(evt);
        }
    });

    menu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    menu.setText("Menú");
    menu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuActionPerformed(evt);
        }
    });

    descripcion1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    descripcion1.setText("A continuación se muestra el contenido de los conjuntos calculados. Si se desea se pueden");

    descripcion2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    descripcion2.setText("eliminar canciones, o bien mover una canción de conjunto.");

    delCancion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    delCancion.setText("Eliminar canción");
    delCancion.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            delCancionActionPerformed(evt);
        }
    });

    descripcionCambio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    descripcionCambio.setText("Mover a conjunto:");

    numConj.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    numConj.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
    numConj.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            numConjActionPerformed(evt);
        }
    });

    ok_mover.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ok_mover.setText("OK");
    ok_mover.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ok_moverActionPerformed(evt);
        }
    });

    jScrollPane1.setViewportView(errText);

    ok_copia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ok_copia.setText("OK");
    ok_copia.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ok_copiaActionPerformed(evt);
        }
    });

    numConj_copia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    numConj_copia.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
    numConj_copia.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            numConj_copiaActionPerformed(evt);
        }
    });

    descripcionCopia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    descripcionCopia.setText("Copiar a conjunto:");

    lb_errText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lb_errText.setText(" ");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(contenedorConjuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(83, 83, 83)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(volver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(delCancion)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(numConj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ok_mover))
                                        .addComponent(descripcionCambio)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(numConj_copia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ok_copia))
                                        .addComponent(descripcionCopia)))))
                        .addComponent(descripcion1)
                        .addComponent(descripcion2)))
                .addGroup(layout.createSequentialGroup()
                    .addGap(298, 298, 298)
                    .addComponent(jLabel1))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lb_errText)))
            .addContainerGap(20, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addGap(27, 27, 27)
            .addComponent(descripcion1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(descripcion2)
            .addGap(0, 0, 0)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(descripcionCambio)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ok_mover)
                        .addComponent(numConj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(descripcionCopia)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ok_copia)
                        .addComponent(numConj_copia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(delCancion)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(volver)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(menu))
                .addComponent(contenedorConjuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lb_errText)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        Menu_AdminAlgo obj = new Menu_AdminAlgo(CD);
        obj.setVisible(true);
        obj.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_volverActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        MenuPrincipal obj = new MenuPrincipal(CD);
        obj.setVisible(true);
        obj.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_menuActionPerformed

    private void numConjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numConjActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numConjActionPerformed

    private void ok_moverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok_moverActionPerformed
            DefaultTableModel model = (DefaultTableModel)tablaConjuntos.getModel();
            
            if(tablaConjuntos.getSelectedRow() == -1){
                if(tablaConjuntos.getRowCount() == 0) lb_errText.setText("La tabla está vacía");
                else lb_errText.setText("Has de seleccionar una Canción");
            }
            else {
                String conj_destino = numConj.getSelectedItem().toString();
                String conj_origen = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 0).toString();
                String titulo_actual = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 1).toString();
                String autor_actual = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 2).toString();
                if(CD.JaEstaTaulaConj(conj_destino, titulo_actual, autor_actual, model)) {
                    lb_errText.setText("Ya existe esta cancion en el conjunto " + conj_destino + ".");
                }
                else {
                    CD.moverCancionDeConjunto(conj_origen, conj_destino, titulo_actual, autor_actual);
                    lb_errText.setText("Cancion \"" + titulo_actual + "\" movida a conjunto " + conj_destino + ".");
                    //Actualizar tabla:
                    model.setValueAt(conj_destino, tablaConjuntos.getSelectedRow(), 0);
                }
            }
    }//GEN-LAST:event_ok_moverActionPerformed

    private void delCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delCancionActionPerformed
        DefaultTableModel model = (DefaultTableModel)tablaConjuntos.getModel();
            
        if(tablaConjuntos.getSelectedRow() == -1){
            if(tablaConjuntos.getRowCount() == 0) lb_errText.setText("La tabla está vacía");
            else lb_errText.setText("Has de seleccionar una Canción");
        }
        else {
            String conj = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 0).toString();
            String titulo = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 1).toString();
            String autor = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 2).toString();
            
            CD.eliminarCancionDelConjunto(conj, titulo, autor);
            lb_errText.setText("Cancion \"" + titulo + "\" eliminada.");
            //Actualizar tabla:
            model.removeRow(tablaConjuntos.getSelectedRow());
        }
    }//GEN-LAST:event_delCancionActionPerformed

    private void tablaConjuntosInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tablaConjuntosInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaConjuntosInputMethodTextChanged

    private void ok_copiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok_copiaActionPerformed
        DefaultTableModel model = (DefaultTableModel)tablaConjuntos.getModel();

        if(tablaConjuntos.getSelectedRow() == -1){
            if(tablaConjuntos.getRowCount() == 0) lb_errText.setText("La tabla está vacía");
            else lb_errText.setText("Has de seleccionar una Canción");
        }
        else {
            String conj_destino = numConj_copia.getSelectedItem().toString();
            String titulo_actual = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 1).toString();
            String autor_actual = tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 2).toString();
            if(CD.JaEstaTaulaConj(conj_destino, titulo_actual, autor_actual, model)) {
                lb_errText.setText("Ya existe esta cancion en el conjunto " + conj_destino + ".");
            }
            else {
                CD.copiarCancionAConjunto(conj_destino, titulo_actual, autor_actual);
                lb_errText.setText("Cancion \"" + titulo_actual + "\" copiada en conjunto " + conj_destino + ".");
                //Actualizar tabla:
                Object o[] = {conj_destino,
                              tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 1),
                              tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 2),
                              tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 3),
                              tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 4),
                              tablaConjuntos.getValueAt(tablaConjuntos.getSelectedRow(), 5)};
                model.addRow(o);
            }
        }
    }//GEN-LAST:event_ok_copiaActionPerformed

    private void numConj_copiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numConj_copiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numConj_copiaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrar();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarConjuntos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarConjuntos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarConjuntos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarConjuntos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarConjuntos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane contenedorConjuntos;
    private javax.swing.JButton delCancion;
    private javax.swing.JLabel descripcion1;
    private javax.swing.JLabel descripcion2;
    private javax.swing.JLabel descripcionCambio;
    private javax.swing.JLabel descripcionCopia;
    private javax.swing.JTextField errText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_errText;
    private javax.swing.JButton menu;
    private javax.swing.JComboBox numConj;
    private javax.swing.JComboBox numConj_copia;
    private javax.swing.JButton ok_copia;
    private javax.swing.JButton ok_mover;
    private javax.swing.JTable tablaConjuntos;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
